version: "3"
services:
  zookeeper:
    image: quay.io/debezium/zookeeper:latest
    container_name: zookeper-car-data

  kafka:
    image: quay.io/debezium/kafka:latest
    container_name: kafka
    ports:
     - "${KAFKA_PORT}:9092"
    links:
     - zookeeper
    environment:
      ZOOKEEPER_CONNECT: ${ZOOKEEPER_CONNECT}

  postgres:
    build:
      context: ./docker/postgres
    image: ${POSTGRES_IMAGE_NAME}:${VERSION}
    container_name: postgres
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./docker/postgres/data:/var/lib/postgresql/data

  adminer:
    image: adminer
    ports:
      - 8080:8080

  connect:
    build:
      context: ./docker/debezium
      args:
        DEBEZIUM_VERSION: latest
    image: ${DEBEZIUM_IMAGE_NAME}:${VERSION}
    container_name: debezium
    ports:
     - 8083:8083
     - 5005:5005
    links:
     - kafka:kafka
     - postgres:postgres
    environment:
      BOOTSTRAP_SERVERS: ${BOOTSTRAP_SERVERS}
      GROUP_ID: ${GROUP_ID}
      CONFIG_STORAGE_TOPIC: ${CONFIG_STORAGE_TOPIC}
      OFFSET_STORAGE_TOPIC: ${OFFSET_STORAGE_TOPIC}
      STATUS_STORAGE_TOPIC: ${STATUS_STORAGE_TOPIC}
      CONNECT_JDBC_URL: ${CONNECT_JDBC_URL}

  python-app:
    build:
      context: ./docker/python-app
    image: ${PYTHON_APP_IMAGE_NAME}:${VERSION}
    container_name: python-app
    command: >
      bash -c "
      python debezium_connectors.py && python ./app/main.py
      "
    volumes:
      - ./docker/python-app/app:/opt/src/app

  bento_server:
    image: price_prediction_service:56n5jrtweondqasc
    ports:
      - 3000:3000
